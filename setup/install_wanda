#!/bin/bash

function get_latest() {
    # Retrieves (hopefully) the "latest" tag of a repo.
    utils/reg/reg tags --timeout 15s "${1}" | egrep -v -e '^latest$' -e '\.(sig|att)$' | tail -n 1
}


echo 'Setting up Wanda'
echo '----------------'

if [ "${REPO}" == "release" ] ; then
    WANDA_URL='registry.suse.com/trento/trento-wanda'
    CHECKS_URL='registry.suse.com/trento/trento-checks'
else
    WANDA_URL='registry.opensuse.org/devel/sap/trento/factory/containers/trento/trento-wanda'
    CHECKS_URL='registry.opensuse.org/devel/sap/trento/factory/containers/trento/trento-checks'
fi
[ -z "${WANDA_VERSION}" ] && WANDA_VERSION=$(get_latest "${WANDA_URL}")
[ -z "${CHECKS_VERSION}" ] && CHECKS_VERSION=$(get_latest "${CHECKS_URL}")
echo "Wanda image:  ${WANDA_URL}:${WANDA_VERSION}"
echo "Checks image: ${CHECKS_URL}:${CHECKS_VERSION}"
export WANDA_URL WANDA_VERSION CHECKS_URL CHECKS_VERSION

# Setting up Wanda containers.
docker-compose -f docker-compose-wanda.yaml up -d || exit 1

# Verifying existence of the containers.
if [ $(docker ps -a -q --filter label=com.suse.tcsc.stack=wanda | wc -l) -ne 4 ] ; then
    echo "Not all Wanda containers are present!" >&2
    exit 1
fi

# Check for open port 4000/tcp.
if [ $(ss -Htnlp4 sport 4000 | wc -l) -eq 0 ] ; then
    echo "Port 4000/tcp seems to be not open. Are the Wanda containers running?" >&2
    exit 1
fi
echo "Port 4000/tcp is open."

# Check that Wanda reports readiness.
ready=0
start=$(date +'%s')
while [ ${ready} -eq 0 ] ; do 
    [ "$(curl http://localhost:4000/api/readyz 2> /dev/null)" == "{\"ready\":true}" ] && ready=1
    sleep 1
    now=$(date +'%s')
    passed=$((now - start))
    [ ${passed} -gt 20 ] && break
done
if [ ${ready} -eq 0 ] ; then 
    echo -e "\nWanda reports not to be ready!\nTry to call the installation script again!" >&2
    exit 1
fi
echo "Wanda reports to be ready."
