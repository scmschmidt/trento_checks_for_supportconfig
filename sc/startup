#!/bin/bash

(
    # Set machine id.
    echo "${MACHINE_ID}" > /etc/machine-id

    # Extract files from packed supportconfig.
    supportconfig="${SUPPORTCONFIG}"
    supportconfig_dir="${SUPPORTCONFIG%.*}"
    tar xf "${supportconfig}"
    ./split-supportconfig "${supportconfig_dir}/etc.txt" "${supportconfig_dir}/sysconfig.txt"

    # Copy files from supportconfig into root fs.
    mkdir /etc/corosync/
    cp /rootfs/etc/corosync/corosync.conf /etc/corosync/
    cp /rootfs/etc/sysconfig/sbd /etc/sysconfig/

    # Setup RPM build tree.
    rpmdev-setuptree

    # Build RPM packages.
    for package in pacemaker corosync python3 SAPHanaSR supportutils-plugin-ha-sap sap_suse_cluster_connector ; do 
        entry=$(grep -e "^${package}[[:space:]]"  "${supportconfig_dir}/rpm.txt" | tr -s ' ')
        [[ -z "${entry}" ]] && continue

        name="${entry%% *}"
        version_release="${entry##* }"
        version="${version_release%-*}"
        release="${version_release#*-}"

        cat << EOF > "/root/rpmbuild/SPECS/${name}.spec"
Name:           ${name}
Version:        ${version}
Release:        ${release}
Summary:        Dummy package for trento_checks_for_supportconfig proof-of-value.

License:        GPL

%description
Dummy package for trento_checks_for_supportconfig proof-of-value.

%files
EOF

        rpmbuild -bb "/root/rpmbuild/SPECS/${name}.spec"

    done

    # Install freeshly build packages.
    while read package ; do
        echo "Install: ${package}"
        rpm -i --force "${package}"
    done < <(find /root/rpmbuild/RPMS/ -name '*.rpm')

) > /var/log/startup.log 2>&1

# Start Prometheus Node Exporter (NOT NEEDED)
# /usr/bin/node_exporter &

# Start Trento agent
trento-agent start --config=/sc/agent-config.yaml 2> /var/log/trento-agent




