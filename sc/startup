#!/bin/bash

# Set machine id.
echo "${MACHINE_ID}" > /etc/machine-id

# Extract files from packed supportconfig.
supportconfig="${SUPPORTCONFIG}"
supportconfig_dir="${SUPPORTCONFIG%.*}"
tar xf "${supportconfig}"
./split-supportconfig "${supportconfig_dir}/etc.txt" "${supportconfig_dir}/sysconfig.txt"  "${supportconfig_dir}/basic-environment.txt" "${supportconfig_dir}/ha.txt"

# Copy files from supportconfig into root fs.
mkdir /etc/corosync/
cp -b /rootfs/etc/corosync/corosync.conf /etc/corosync/
cp -b /rootfs/etc/sysconfig/sbd /etc/sysconfig/
cp -b /rootfs/etc/os-release /etc/
cp -r /rootfs/var/lib/pacemaker /var/lib/

# Copy prepared scripts.
cp /sc/cibadmin /sc/sbd /bin/

# Create sbd dumps.
sed -n '/==Dumping header on disk/,/==Header on disk/p' "${supportconfig_dir}/ha.txt" > /tmp/sbd_dumps


# Setup RPM build tree.
rpmdev-setuptree

# Build RPM packages.
for package in pacemaker corosync python3 SAPHanaSR sbd supportutils-plugin-ha-sap sap_suse_cluster_connector SLES_SAP-release ; do 
    entry=$(grep -e "^${package}[[:space:]]"  "${supportconfig_dir}/rpm.txt" | tr -s ' ')
    [[ -z "${entry}" ]] && continue

    name="${entry%% *}"
    version_release="${entry##* }"
    version="${version_release%-*}"
    release="${version_release#*-}"

    cat << EOF > "/root/rpmbuild/SPECS/${name}.spec"
Name:           ${name}
Version:        ${version}
Release:        ${release}
Summary:        Dummy package for trento_checks_for_supportconfig proof-of-value.

License:        GPL

%description
Dummy package for trento_checks_for_supportconfig proof-of-value.

%files
EOF

    rpmbuild -bb "/root/rpmbuild/SPECS/${name}.spec"

done

# Install freeshly build packages.
while read package ; do
    echo "Install: ${package}"
    rpm -i --force "${package}"
done < <(find /root/rpmbuild/RPMS/ -name '*.rpm')

# Start Trento agent
trento-agent start --config=/sc/agent-config.yaml




