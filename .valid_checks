# List of all Trento checks.
#
# syntax: check-id:type:category [comment] 
#
#   check-id:   id of the Trento check
#   type:       check type
#                   single      check can be executed on a single node/supportconfig
#                   multi       check must be executed on all configs (can or must?)
#   category:   category of the check like they are grouped in Trento (makes it easier to select checks)
#   comment:    comment separated by at least one space (the # is optional)
 

# Community Checks (part of https://github.com/trento-project/wanda/tree/main)
# ----------------------------------------------------------------------------
156F64:single:corosync   # Check Corosync token_timeout value (Corosync)                                     [gatherer: corosync.conf]
21FCA6:single:corosync   # Check Corosync token_retransmits_before_loss_const value (Corosync)               [gatherer: corosync.conf]
24ABCB:single:corosync   # Check Corosync join timeout value (Corosync)                                      [gatherer: corosync.conf]
33403D:single:corosync   # Check Corosync transport mechanism (Corosync)                                     [gatherer: corosync.conf]
6E9B82:single:corosync   # Check Corosync two_node value (Corosync)                                          [gatherer: corosync.conf]
845CC9:single:corosync   # Check Corosync max_messages value (Corosync)                                      [gatherer: corosync.conf]
A1244C:single:corosync   # Check Corosync consensus timeout (Corosync)                                       [gatherer: corosync.conf]
C620DC:single:corosync   # Check Corosync expected_votes value (Corosync)                                    [gatherer: corosync.conf]
DA114A:single:corosync   # Corosync rings (Corosync)                                                         [gatherer: corosync.conf]
49591F:single:sbd        # sbd SBD_STARTMODE (SBD)                                                           [gatherer: sbd_config]
61451E:single:sbd        # multiple SBD devices (SBD)                                                        [gatherer: sbd_config]
0B6DB2:single:sbd        # SBD_PACEMAKER (SBD)                                                               [gatherer: sbd_config]
222A57:single:package    # supported sbd version (OS and package versions)                                   [gatherer: package_version]
9FAAD0:single:package    # unsupported pacemaker version (OS and package versions)                           [gatherer: package_version]
9FEFB0:single:package    # supported pacemaker version (OS and package versions)                             [gatherer: package_version]
C3166E:single:package    # unsupported sbd version (OS and package versions)                                 [gatherer: package_version]
DC5429:single:package    # supported corosync version (OS and package versions)                              [gatherer: package_version]
F50AF5:single:package    # supported python3 version (OS and package versions)                               [gatherer: package_version]
CAEFF1:single:os         # OS flavor SLES_SAP (OS and package versions)                                      [gatherer: package_version]
D028B9:single:os         # OS version SLES_SAP (OS and package versions)                                     [gatherer: package_version]
205AF7:single:pacemaker  # fencing enabled (Pacemaker)                                                       [gatherer: cibadmin]
373DB8:single:pacemaker  # fencing timeout (Pacemaker)                                                       [gatherer: cibadmin]
68626E:single:sbd        # SBD msgwait timeout (SBD)                                                         [gatherer: sbd_dump]
B089BE:single:sbd        # SBD watchdog timeout (SBD)                                                        [gatherer: sbd_dump]

# The following checks are disabled because the gatherer calls commands which will not work
# without a running SAP system or cluster.
# It is worth to investigate, if scripts with the same name as the commands can be provided, which
# use data from the supportconfig and additional data to mimic correct and incorrect behaviour.
#
# 00081D:single:corosync   # Check Corosync max_messages during runtime (Corosync)                             [gatherer: corosync-cmapctl]
# 15F7A8:single:corosync   # Check Corosync token_retransmits_before_loss_const during runtime (Corosync)      [gatherer: corosync-cmapctl]
# 53D035:single:corosync   # Check Corosync token timeout during runtime (Corosync)                            [gatherer: corosync-cmapctl]
# 822E47:single:corosync   # Corosync join timeout during runtime (Corosync)                                   [gatherer: corosync-cmapctl]
# D78671:single:corosync   # Check Corosync two_node value during runtime (Corosync)                           [gatherer: corosync-cmapctl]
# FB0E0D:single:corosync   # Check Corosync consensus timeout during runtime (Corosync)                        [gatherer: corosync-cmapctl]
# 32CFC6:single:corosync   # corosync running 2 ring configuration (Corosync)                                  [gatherer: corosync-cmapctl]
# 7E0221:multi:corosync    # Check Corosync transport settings during runtime (Corosync)                       [gatherer: corosync-cmapctl]
# 790926:single:misc       # hacluster password (Miscellaneous)                                                [gatherer: verify_password]
# 816815:single:sbd        # SBD service state (SBD)                                                           [gatherer: systemd]


# Premium Checks (part of https://gitlab.suse.de/trento-project/wanda-premium-checks)
# -----------------------------------------------------------------------------------
#
# Premium checks wich need to be downloaded from the GitLab repo and need to put into
# the directory wanda/priv/catalog/ of the cloned Wanda project, which is mounted into the
# Wanda container.
BA215C:multi:corosync     # corosync.conf files are identical                                                 [gatherer: corosync.conf]
0B0F87:multi:package      # SAPHanaSR version identical on all nodes                                          [gatherer: package_version]
31BDCB:single:package     # supported SAPHanaSR version                                                       [gatherer: package_version]
53D33E:multi:package      # sbd version identical on all nodess                                               [gatherer: package_version]
82A031:multi:package      # pacemaker version identical on all nodes                                          [gatherer: package_version]
BC9DF9:multi:package      # Python3 version identical on all nodes                                            [gatherer: package_version]
DF8328:single:package     # corosync version identical on all nodes                                           [gatherer: package_version]
6E0DEC:single:pacemaker   # concurrent fencing option is enabled                                              [gatherer: cibadmin]
B3DA7E:single:pacemaker   # Cluster resource-stickiness and migration-threshold                               [gatherer: cibadmin]
DE74B2:single:pacemaker   # Azure Fence agent configuration                                                   [gatherer: cibadmin]
#58002B:single:pacemaker   # order constraint present                                                          [gatherer: cibadmin]

# The following checks are disabled because the gatherer calls commands which will not work
# without a running SAP system or cluster. See comments in Community Checks part.
#
# ABA3CA:multi:???       # SAP Host Agent is running                            [gatherer: saphostctrl]
# 438525:multi:???       # Cluster hostnames resolution                         [gatherer: hosts,cibadmin]    
  
                              
              